Q:
Exercise 1.6.  Alyssa P. Hacker doesn't see why if needs to be provided as a special form. ``Why can't I just define it as an ordinary procedure in terms of cond?'' she asks. Alyssa's friend Eva Lu Ator claims this can indeed be done, and she defines a new version of if:

(define (new-if predicate then-clause else-clause)
  (cond (predicate then-clause)
        (else else-clause)))

Eva demonstrates the program for Alyssa:

(new-if (= 2 3) 0 5)
5

(new-if (= 1 1) 0 5)
0

Delighted, Alyssa uses new-if to rewrite the square-root program:

(define (sqrt-iter guess x)
  (new-if (good-enough? guess x)
          guess
          (sqrt-iter (improve guess x)
                     x)))

What happens when Alyssa attempts to use this to compute square roots? Explain.

A:
参考了网上的解释。
新定义的new-if和原始的if不同的地方在于，new-if是一个procedure，
因此既会分析then-clause，也会分析else-clause，
但是else-clause递归了自己，所以else-clause会无穷尽的分析下去，程序是无法结束运行的。
不同于new-if，if是一个特殊的内置函数，then-clause和else-clause只会分析一个，
所以不存在函数无限运行下去的问题。