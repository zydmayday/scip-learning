Q:
Exercise 1.20.  The process that a procedure generates is of course dependent on the rules used by the interpreter. As an example, consider the iterative gcd procedure given above. Suppose we were to interpret this procedure using normal-order evaluation, as discussed in section 1.1.5. (The normal-order-evaluation rule for if is described in exercise 1.5.) Using the substitution method (for normal order), illustrate the process generated in evaluating (gcd 206 40) and indicate the remainder operations that are actually performed. How many remainder operations are actually performed in the normal-order evaluation of (gcd 206 40)? In the applicative-order evaluation?

A:
Normal-order
(gcd 206 40)
if (= 206 0) -> #f
(gcd 40 (remainder 206 40))
if (= 40 0) -> $f
(gcd (remainder 206 40) (remainder 40 (remainder 206 40)))
计算remainder -> 6 一次
if (= 6 0) -> #f
(gcd (remainder 40 (remainder 206 40)) (remainder 6 (remainder 40 (remainder 206 40))))
计算(remainder 40 (remainder 206 40)) -> 4 两次
if (= 4 0) -> #f
....继续下去

在Normal-order中，由于remainder的值不会提前计算，
会累计到if需要知道值为止才执行，
所以会越累积越多，计算次数会非常多。

Applicative-order
(gcd 206 40)
if (= 206 0) -> #f
(gcd 40 6)
if (= 40 0) -> #f
(gcd 6 4)
(gcd 4 2)
(gcd 2 0)
remainder一共计算了5次。